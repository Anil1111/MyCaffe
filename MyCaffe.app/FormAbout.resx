<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAPwAAAEVCAYAAADEl4iZAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAFLaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNr
        ZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pgo8eDp4bXBtZXRhIHht
        bG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjYtYzEzOCA3OS4x
        NTk4MjQsIDIwMTYvMDkvMTQtMDE6MDk6MDEgICAgICAgICI+CiA8cmRmOlJERiB4bWxuczpyZGY9Imh0
        dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogIDxyZGY6RGVzY3JpcHRp
        b24gcmRmOmFib3V0PSIiLz4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+Cjw/eHBhY2tldCBlbmQ9InIi
        Pz4gSa46AAAilUlEQVR4Xu2dB3hUVfqHRUR0bburuyw2uiCKiIJgY61rxV5Rd/0rYkPAvq4oIiIdQQis
        KHYFDPooFpBAIAlSBALS6wKhJpOEMJn0mXz/853cG+9M7p25N9Nzfq/P94RkzsyciXlPL0cQAEAZIDwA
        CgHhAVAICA+AQkB4ABQCwgOgEBAeAIWA8AAoBIQHQCEgPAAKAeEBUAgID4BCQHgAFMKR8H1WeBAIRIKF
        EyA8ApHk4QQIj0AkeTgBwiMQSR5OgPAIRJKHE8IWvqiymqqqCYFARDnYNTMHnRC28CVekRMAQNRh18wc
        dELYwnu46AEARB12zcxBJ0B4AJIECA+AQkB4ABQCwgOgEBAeAIWA8AAoBIQHQCEgPAAKAeEBUAgID4BC
        QHgAFALCA6AQEB4AhYDwACgEhAdAISA8AAoB4QFQCAgPgEJAeAAUAsIDoBAQHgCFgPAAKASEB0AhIDwA
        CgHhAVAICA+AQkB4ABQCwgOgEBAeAIWA8AAoBIQHQCEgPAAKAeEBUAgID4BCQHgAFALCA6AQEB4AhYDw
        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
        QmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAAAGABoAwAAJgAAACAgAAAAABgAqAwAAI4DAAAoAAAAEAAAACAAAAABABgAAAAAAAAD
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AP8AAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAP8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        /wD//wD/AAAAAAAAVVVVVVVVVVVVVVVVVVVVAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wD//wD/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        //8A//8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//8A//8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA//8AAM//AACH/wAAhP8AAM9/AAD/fwAAz7cAAIQbAACEAQAAz7sAAP93AADPfwAAhP8AAIf/
        AADP/wAA//8AACgAAAAgAAAAQAAAAAEAGAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/wAA/wAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAA/wAA/wAA/wAA/wAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAA/wAA/wAA/wAA/wAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAA/wAA/wAA
        /wAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAA/wAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AP//AP//AP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/AP//AP//AP//AP//AP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AP//AP//AP//AP//AP8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/AP//AP//AP//AP//AP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AP//AP//
        AP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//wD//wD/
        /wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//wD//wD//wD//wD//wAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD//wD//wD//wD//wD//wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//wD//wD//wD//wD//wAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAD//wD//wD//wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/////////////////////+P////B////gP///4Cf//+A7///wff//+P3////9/////f//+P7///B/
        f+/gP7/n4CAAA+A/v+fwf3/v+P7////9/////f//+P3///B9///gO///4Cf//+A////wf///+P//////
        /////////////w==
</value>
  </data>
</root>