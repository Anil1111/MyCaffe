<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAPwAAAEVCAYAAADEl4iZAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAFLaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1
        TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pgo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEv
        IiB4OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjYtYzEzOCA3OS4xNTk4MjQsIDIwMTYvMDkvMTQtMDE6
        MDk6MDEgICAgICAgICI+CiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkv
        MDIvMjItcmRmLXN5bnRheC1ucyMiPgogIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiLz4KIDwv
        cmRmOlJERj4KPC94OnhtcG1ldGE+Cjw/eHBhY2tldCBlbmQ9InIiPz4gSa46AAAkn0lEQVR4Xu2dB5wU
        5d3HRVQ0thQTgkalRsWCKAYrrzVWNHZFTXwt2EHFEiNoCCIdQdoril0BQWMXOPohReBAeg0c/W7vKNfb
        3v+d33Mz5NlhZnu9+X35/D937D47O7s336fNUw4SQohnoPCEeAgKT4iHoPCEeAgKT4iHoPCEeAgKT4iH
        oPCEeAgKT4iHoPCEeAgKT4iHoPCEeAgKT4iHiEj4hxaWMBiMNItIoPAMRoZHJFB4BiPDIxIoPIOR4REJ
        FJ7ByPCIhJiF31tVK9W1wmAwEhxwzcnBSIhZ+NIa40wIIQkHrjk5GAkxC1+CrIcQknDgmpODkUDhCckQ
        KDwhHoLCE+IhKDwhHoLCE+IhKDwhHoLCE+IhKDwhHoLCE+IhKDwhHoLCE+IhKDwhHoLCE+IhKDwhHoLC
        E+IhKDwhHoLCE+IhKDwhHoLCE+IhKDwhHoLCE+IhKDwhHoLCE+IhKDwhHoLCE+IhKDwhHoLCE+IhKDwh
        HoLCE+IhKDwhHoLCE+IhKDwhHoLCE+IhKDwhHoLCE+IhKDwhHoLCE+IhKDwhHoLCE+IhKDwhHoLCE+Ih
        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
        BpH/B+A9Z9qjo5F3AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAAAGABoAwAAJgAAACAgAAAAABgAqAwAAI4DAAAoAAAAEAAAACAAAAABABgAAAAAAAAD
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AP8AAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAP8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        /wD//wD/AAAAAAAAVVVVVVVVVVVVVVVVVVVVAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wD//wD/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        //8A//8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//8A//8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA//8AAM//AACH/wAAhP8AAM9/AAD/fwAAz7cAAIQbAACEAQAAz7sAAP93AADPfwAAhP8AAIf/
        AADP/wAA//8AACgAAAAgAAAAQAAAAAEAGAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/wAA/wAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAA/wAA/wAA/wAA/wAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAA/wAA/wAA/wAA/wAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAA/wAA/wAA
        /wAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAA/wAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AP//AP//AP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/AP//AP//AP//AP//AP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AP//AP//AP//AP//AP8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/AP//AP//AP//AP//AP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AP//AP//
        AP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//wD//wD/
        /wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//wD//wD//wD//wD//wAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD//wD//wD//wD//wD//wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//wD//wD//wD//wD//wAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAD//wD//wD//wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/////////////////////+P////B////gP///4Cf//+A7///wff//+P3////9/////f//+P7///B/
        f+/gP7/n4CAAA+A/v+fwf3/v+P7////9/////f//+P3///B9///gO///4Cf//+A////wf///+P//////
        /////////////w==
</value>
  </data>
</root>